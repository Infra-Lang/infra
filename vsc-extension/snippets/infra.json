{
  "Function Definition": {
    "prefix": "function",
    "body": [
      "function ${1:functionName}(${2:params}) -> ${3:returnType}:",
      "    ${4:// function body}",
      "    return ${5:value}"
    ],
    "description": "Create a new function with type annotations"
  },
  "Variable with Type": {
    "prefix": "let",
    "body": [
      "let ${1:variableName}: ${2:type} = ${3:value}"
    ],
    "description": "Create a typed variable"
  },
  "If Statement": {
    "prefix": "if",
    "body": [
      "if ${1:condition}:",
      "    ${2:// if body}",
      "else:",
      "    ${3:// else body}"
    ],
    "description": "If-else statement"
  },
  "For Loop": {
    "prefix": "for",
    "body": [
      "for ${1:item} in ${2:iterable}:",
      "    ${3:// loop body}"
    ],
    "description": "For loop"
  },
  "While Loop": {
    "prefix": "while",
    "body": [
      "while ${1:condition}:",
      "    ${2:// loop body}"
    ],
    "description": "While loop"
  },
  "Try-Catch": {
    "prefix": "try",
    "body": [
      "try:",
      "    ${1:// try block}",
      "catch ${2:error}:",
      "    ${3:// error handling}"
    ],
    "description": "Try-catch error handling"
  },
  "Array Declaration": {
    "prefix": "array",
    "body": [
      "let ${1:arrayName}: [${2:elementType}] = [${3:elements}]"
    ],
    "description": "Create a typed array"
  },
  "Object Declaration": {
    "prefix": "object",
    "body": [
      "let ${1:objectName} = {",
      "    ${2:key}: ${3:value}",
      "}"
    ],
    "description": "Create an object"
  },
  "Import Statement": {
    "prefix": "import",
    "body": [
      "import {${1:items}} from \"${2:module}\""
    ],
    "description": "Import statement"
  },
  "Export Function": {
    "prefix": "export",
    "body": [
      "export function ${1:functionName}(${2:params}) -> ${3:returnType}:",
      "    ${4:// function body}",
      "    return ${5:value}"
    ],
    "description": "Export a function"
  },
  "Print Statement": {
    "prefix": "print",
    "body": [
      "print(${1:value})"
    ],
    "description": "Print a value"
  },
  "Math Function": {
    "prefix": "math",
    "body": [
      "math.${1|sqrt,pow,abs,floor,ceil|}(${2:value})"
    ],
    "description": "Math module function"
  },
  "String Function": {
    "prefix": "string",
    "body": [
      "string.${1|length,upper,lower,substring|}(${2:value})"
    ],
    "description": "String module function"
  },
  "Array Function": {
    "prefix": "arr",
    "body": [
      "array.${1|length,push,pop,sort,reverse|}(${2:array})"
    ],
    "description": "Array module function"
  },
  "File I/O": {
    "prefix": "io",
    "body": [
      "io.${1|read_file,write_file,exists|}(${2:path})"
    ],
    "description": "File I/O operation"
  }
}
